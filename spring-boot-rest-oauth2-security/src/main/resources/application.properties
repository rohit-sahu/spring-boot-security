# JDBC URL of the database.
#spring.datasource.url=jdbc:mysql://localhost:3306/spring_boot_rest_oauth2?createDatabaseIfNotExist=true
# Login username of the database.
#spring.datasource.username=root
# Login password of the database.
#spring.datasource.password=root
# Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.datasource.url=jdbc:h2:mem:spring_boot_rest_oauth2
#spring.datasource.url=jdbc:h2:file:~/test
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.datasource.driver-class-name=org.h2.Driver

# Enabling H2 Console
spring.h2.console.enabled=true

# Custom H2 Console URL
spring.h2.console.path=/h2-console

# Whether to enable trace output, default value is false
spring.h2.console.settings.trace=true

# Whether to enable remote access, default value is false
spring.h2.console.settings.web-allow-others=true

# Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.tomcat.max-wait=${TOMCAT_MAX_WAIT_TIME_MS:30000}
# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.tomcat.max-active=${TOMCAT_MAX_ACTIVE_CONNECTIONS:250}
spring.datasource.tomcat.max-idle=20
spring.datasource.tomcat.min-idle=15

# Validate the connection before borrowing it from the pool.
spring.datasource.tomcat.testOnBorrow=${TOMCAT_CONNECTION_BORROW_FLAG:true}
#spring.datasource.tomcat.testOnConnect=true
#spring.datasource.tomcat.testOnReturn=true

spring.datasource.tomcat.testWhileIdle=${TOMCAT_TEST_FLAG:true}
spring.datasource.tomcat.validationQuery=${TOMCAT_VALIDATION_QUERY:SELECT 1}

## Hibernate Properties
#Turn Statistics on
spring.jpa.properties.hibernate.generate_statistics=true
# Whether to enable logging of SQL statements.
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Defaults to "create-drop" when using an embedded database and no schema manager was detected. Otherwise, defaults to "none"(create, create-drop, validate, update).
spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.dialect.storage_engine=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT_STORAGE_ENGINE:innodb}
hibernate.connection.CharSet=${HIBERNATE_CONNECTION_CHARSET:utf8mb4}
hibernate.connection.characterEncoding=${HIBERNATE_CONNECTION_CHARACTER_ENCODING:utf8}
hibernate.connection.useUnicode=${HIBERNATE_CONNECTION_USEUNICODE:true}

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
#This will genarate table name and field based on entity case sensative
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
############# Naming strategy #################
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

logging.level.org.hibernate.stat=debug
logging.level.org.hibernate.type=trace
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

##################------HikariCP Settings---------############
spring.datasource.type=${HIKARI_DATASOURCE:com.zaxxer.hikari.HikariDataSource}
spring.datasource.hikari.minimumIdle=${HIKARI_MINIMUM_IDLE_CONNECTION:10}
spring.datasource.hikari.maximumPoolSize=${HIKARI_POOL_SIZE:40}
spring.datasource.hikari.idleTimeout=${HIKARI_IDLE_CONNECTION_TIMEOUT_MS:30000}
spring.datasource.hikari.poolName=${HIKARI_POOL_NAME:SpringBootJPAHikariCP}
spring.datasource.hikari.maxLifetime=${HIKARI_MAX_LIFETIME_MS:1800000}
spring.datasource.hikari.connectionTimeout=${HIKARI_CONNECTION_TIMEOUT_MS:30000}
spring.jpa.hibernate.connection.provider_class=${HIKARI_CONNECTION_PROVIDER:org.hibernate.hikaricp.internal.HikariCPConnectionProvider}

###############-------- Enable logging for HikariCP to verify that it is used --------##############
logging.level.com.zaxxer.hikari.HikariConfig=${HIKARI_DEFAULT_LOG_LEVEL:DEBUG}

# logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
